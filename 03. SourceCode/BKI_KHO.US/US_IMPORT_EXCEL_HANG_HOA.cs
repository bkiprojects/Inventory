///************************************************
/// Generated by: TuyenNT
/// Date: 24/05/2015 10:40:01
/// Goal: Create User Service Class for IMPORT_EXCEL_HANG_HOA
///************************************************
/// <summary>
/// Create User Service Class for IMPORT_EXCEL_HANG_HOA
/// </summary>

using System;
using BKI_KHO.DS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BKI_KHO.US{

public class US_IMPORT_EXCEL_HANG_HOA : US_Object
{
	private const string c_TableName = "IMPORT_EXCEL_HANG_HOA";
#region "Public Properties"
	public decimal dcSTT 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "STT", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["STT"] = value;
		}
	}

	public bool IsSTTNull()	{
		return pm_objDR.IsNull("STT");
	}

	public void SetSTTNull() {
		pm_objDR["STT"] = System.Convert.DBNull;
	}

	public string strMA_HANG 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "MA_HANG", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["MA_HANG"] = value;
		}
	}

	public bool IsMA_HANGNull() 
	{
		return pm_objDR.IsNull("MA_HANG");
	}

	public void SetMA_HANGNull() {
		pm_objDR["MA_HANG"] = System.Convert.DBNull;
	}

	public string strTEN_HANG 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "TEN_HANG", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["TEN_HANG"] = value;
		}
	}

	public bool IsTEN_HANGNull() 
	{
		return pm_objDR.IsNull("TEN_HANG");
	}

	public void SetTEN_HANGNull() {
		pm_objDR["TEN_HANG"] = System.Convert.DBNull;
	}

	public decimal dcGIA_NHAP 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "GIA_NHAP", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["GIA_NHAP"] = value;
		}
	}

	public bool IsGIA_NHAPNull()	{
		return pm_objDR.IsNull("GIA_NHAP");
	}

	public void SetGIA_NHAPNull() {
		pm_objDR["GIA_NHAP"] = System.Convert.DBNull;
	}

	public decimal dcGIA_BAN 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "GIA_BAN", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["GIA_BAN"] = value;
		}
	}

	public bool IsGIA_BANNull()	{
		return pm_objDR.IsNull("GIA_BAN");
	}

	public void SetGIA_BANNull() {
		pm_objDR["GIA_BAN"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_IMPORT_EXCEL_HANG_HOA() 
	{
		pm_objDS = new DS_IMPORT_EXCEL_HANG_HOA();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_IMPORT_EXCEL_HANG_HOA(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_IMPORT_EXCEL_HANG_HOA(decimal i_dbID) 
	{
		pm_objDS = new DS_IMPORT_EXCEL_HANG_HOA();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
	}
}
